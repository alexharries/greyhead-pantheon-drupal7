<?php

/**
 * Database settings processor.
 *
 * DO NOT EDIT THIS FILE'S CONTENTS!
 *
 * Instead, see the sample.local_databases.php file in the root of this
 * repository.
 */

// Attempt to load the local_databases.php file to set the database connection
// information.
if (file_exists(GREYHEAD_DRUPAL_ROOT . '/../local_database.php')
  && is_readable(GREYHEAD_DRUPAL_ROOT . '/../local_database.php')) {
  include GREYHEAD_DRUPAL_ROOT . '/../local_database.php';
}

// This file will be skipped if the $databases array has already been defined
// or if we're in a Pantheon site.
global $databases;

if (!defined('PANTHEON_ENVIRONMENT')
  && !(strtok($_SERVER['REQUEST_URI'], '?') == '/install.php')
  && empty($databases)) {
  // Set defaults:
  $databases = [
    'default' =>
      [
        'default' =>
          [
            'database' => '',
            'username' => '',
            'password' => '',
            'host' => '127.0.0.1',
            'port' => '3306',
            'driver' => 'mysql',
            'prefix' => '',
          ],
      ],
  ];

  // If local_databases.php exists, include it; otherwise, carry on (making the
  // assumption that the default databases setup is fine.
  if (file_exists(GREYHEAD_DRUPAL_ROOT . '/../local_databases.php')
    && is_readable(GREYHEAD_DRUPAL_ROOT . '/../local_databases.php')) {
    include_once(GREYHEAD_DRUPAL_ROOT . '/../local_databases.php');

    // Do we have a databases array?
    if (is_array($local_databases) && (count($local_databases) > 0)) {
      // Do we have a key which matches MULTISITE_IDENTIFIER?
      if (array_key_exists(MULTISITE_IDENTIFIER, $local_databases)) {
        // Do we have one key (i.e. only one database) or more than one?
        if (count($local_databases[MULTISITE_IDENTIFIER]) == 1) {
          // Only one. Merge into the database defaults.
          reset($local_databases[MULTISITE_IDENTIFIER]);
          $first_key = key($local_databases[MULTISITE_IDENTIFIER]);

          $local_database_configuration = $local_databases[MULTISITE_IDENTIFIER][$first_key];
        }
        else {
          // More than one: choose based on the URI.
          $found = FALSE;

          // Get the HTTP_HOST value in lowercase.
          $http_host = strtolower($_SERVER['HTTP_HOST']);

          // Create a list of possible URLs. Currently, we try with and without
          // "www." in front of the URL.
          $host_possibilities = [$http_host];

          if (substr($http_host, 0, strlen('www.')) == 'www.') {
            $host_possibilities[] = substr($http_host, strlen('www.'));
          }

          foreach ($host_possibilities as $host_possibility) {
            if (array_key_exists($host_possibility, $local_databases[MULTISITE_IDENTIFIER])) {
              // Found it. Merge into the database defaults.
              $local_database_configuration = $local_databases[MULTISITE_IDENTIFIER][$_SERVER['HTTP_HOST']];

              // Set the flag and break.
              $found = TRUE;
              break;
            }
          }

          if (!$found) {
            die('<!-- Could not find a key matching one of: "' . implode('", "', $host_possibilities) . '" in the $databases[' . MULTISITE_IDENTIFIER . '] array in local_databases.php in the directory above Drupal\'s index.php. This usually happens when you have more than one site URL in the databases array, e.g. $databases[' . MULTISITE_IDENTIFIER . ']["site_1.co.uk"], $databases[' . MULTISITE_IDENTIFIER . ']["site_2.co.uk"], etc. If you are seeing this error in Drush, try running the command again with --uri=[URI] where [URI] is a domain name which matches one of the keys in the $databases[' . MULTISITE_IDENTIFIER . '] array. -->');
          }
        }
      }
      else {
        die('<!-- Could not find the key ' . MULTISITE_IDENTIFIER . ' in the $databases array in local_databases.php in the directory above Drupal\'s index.php. -->');
      }
    }
  }
  else {
    die('<!-- local_databases.php file is missing or unreadable in the directory above Drupal\'s index.php. -->');
  }

  // If we have $database_configuration, merge it into the database defaults.
  if (isset($local_database_configuration) && is_array($local_database_configuration)) {
    $databases['default']['default'] = $local_database_configuration + $databases['default']['default'];
  }
}
