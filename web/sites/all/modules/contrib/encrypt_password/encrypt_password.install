<?php

/**
 * @file
 * Install, update, and uninstall functions for the Encrypt Password module.
 */

/**
 * Implements hook_requirements().
 */
function encrypt_password_requirements($phase) {
  $t = get_t();
  $requirements = array();

  switch ($phase) {
    case 'runtime':
      if (_encrypt_password_settings_enabled()) {
        $severity = REQUIREMENT_OK;
        $value = $t('Enabled');
      }
      else {
        $severity = REQUIREMENT_WARNING;
        $value = $t('Disabled');
      }
      $requirements['encrypt_password'] = array(
        'title' => $t('Password encryption'),
        'description' => $t('Encrypted passwords: @encrypted. Unencrypted passwords: @unencrypted.', array(
          '@encrypted' => _encrypt_password_user_count('encrypted'),
          '@unencrypted' => _encrypt_password_user_count('unencrypted'),
        )),
        'severity' => $severity,
        'value' => $value,
      );
      break;
  }

  return $requirements;
}

/**
 * Implements hook_disable().
 */
function encrypt_password_disable() {
  $count = _encrypt_password_user_count('encrypted');

  // If there are any encrypted passwords, display a warning message.
  if ($count > 0) {
    $message = format_plural($count,
      'There is 1 user with an encrypted password. This user will not be able to log in until the Encrypt Password module is re-enabled.',
      'There are @count users with encrypted passwords. These users will not be able to log in until the Encrypt Password module is re-enabled.');
    drupal_set_message($message, 'error');
  }
}

/**
 * Implements hook_uninstall().
 */
function encrypt_password_uninstall() {
  // Delete the settings.
  variable_del('encrypt_password_settings');
}
